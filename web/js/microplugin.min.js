!function(root,factory){"function"==typeof define&&define.amd?define(factory):"object"==typeof exports?module.exports=factory():root.MicroPlugin=factory()}(this,function(){var MicroPlugin={};MicroPlugin.mixin=function(Interface){Interface.plugins={},Interface.prototype.initializePlugins=function(plugins){var i,n,key,self=this,queue=[];if(self.plugins={names:[],settings:{},requested:{},loaded:{}},utils.isArray(plugins))for(i=0,n=plugins.length;n>i;i++)"string"==typeof plugins[i]?queue.push(plugins[i]):(self.plugins.settings[plugins[i].name]=plugins[i].options,queue.push(plugins[i].name));else if(plugins)for(key in plugins)plugins.hasOwnProperty(key)&&(self.plugins.settings[key]=plugins[key],queue.push(key));for(;queue.length;)self.require(queue.shift())},Interface.prototype.loadPlugin=function(name){var self=this,plugins=self.plugins,plugin=Interface.plugins[name];if(!Interface.plugins.hasOwnProperty(name))throw new Error('Unable to find "'+name+'" plugin');plugins.requested[name]=!0,plugins.loaded[name]=plugin.fn.apply(self,[self.plugins.settings[name]||{}]),plugins.names.push(name)},Interface.prototype.require=function(name){var self=this,plugins=self.plugins;if(!self.plugins.loaded.hasOwnProperty(name)){if(plugins.requested[name])throw new Error('Plugin has circular dependency ("'+name+'")');self.loadPlugin(name)}return plugins.loaded[name]},Interface.define=function(name,fn){Interface.plugins[name]={name:name,fn:fn}}};var utils={isArray:Array.isArray||function(vArg){return"[object Array]"===Object.prototype.toString.call(vArg)}};return MicroPlugin});